openapi: 3.0.0
info:
  version: 'v1'
  title: 'Library API'
servers:
  - url: 'https://995f9748-2ad5-4c2a-b188-533a4631b8fe.mock.pstmn.io'
paths:
  /books:
    get:
      summary: 'returns all the books'
      operationId: listBooks
      tags:
          - Book
      responses:
        '200':
          description: 'returns all the books'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Books'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /book/{id}:
      get:
          summary: 'returns the details of the single book'
          operationId: singlebook
          parameters:
              - name: id
                in: path
                description: The unique id
                required: true
                schema:
                    type: string
          tags:
              - Book
          responses:
              "200":
                  description: Return single book
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Book"
  /admin/book:
      post:
          summary: 'add book path for admin'
          operationId: addBook
          tags:
              - Book
          requestBody:
              required: true
              description: Add single book
              content:
                  application/json:
                      schema:
                          $ref: "#/components/schemas/BookPostBody"
          responses:
              "201":
                  description: Response for POST call
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/BookPostResponse"
  /admin/book/{id}:
        put:
            summary: 'update book path for admin'
            operationId: updateBook
            parameters:
              - name: id
                in: path
                description: The unique id
                required: true
                schema:
                    type: string
            tags:
                - Book
            requestBody:
                required: true
                description: update single book
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BookPostBody"
            responses:
                "204":
                    description: Response for PUT call
        delete:
            summary: 'delete book path for admin'
            operationId: deleteBook
            parameters:
              - name: id
                in: path
                description: The unique id
                required: true
                schema:
                    type: string
            tags:
                - Book
            responses:
                "204":
                      description: Response for PUT call
  /genres:
      get:
          summary: 'get all genres from the api'
          operationId: listGenres
          tags:
              - Genre
          responses:
              '200':
                  description: List all genres
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/Genres"
  /admin/genre:
      post:
          summary: 'add genre api for the admin'
          operationId: addGenre
          tags:
              - Genre
          requestBody:
              required: true
              description: Add Genre
              content:
                  application/json:
                      schema:
                          $ref: "#/components/schemas/GenrePostBody"
          responses:
              "201":
                  description: Response for POST call
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/GenrePostResponse"
  /admin/genre/{id}:
      put:
            summary: 'update genre path for admin'
            operationId: updateGenre
            parameters:
              - name: id
                in: path
                description: The unique id
                required: true
                schema:
                    type: string
            tags:
                - Genre
            requestBody:
                required: true
                description: update single genre
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/GenrePostBody"
            responses:
                "204":
                    description: Response for PUT call
  /login:
      post:
          summary: 'login route for the user'
          operationId: loginUser
          tags:
              - User
          requestBody:
              required: true
              description: Login user
              content:
                  application/json:
                      schema:
                          $ref: "#/components/schemas/LoginPostBody"
          responses:
              "201":
                  description: Response for POST call
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/LoginResponse"
  /signup:
      post:
          summary: 'signup route for the user'
          operationId: signupUser
          tags:
              - User
          requestBody:
              required: true
              description: Signup user
              content:
                  application/json:
                      schema:
                          $ref: "#/components/schemas/SignupPostBody"
          responses:
              "201":
                  description: Response for POST call
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/SignupResponse"
components:
  schemas:
    Genres:
        type: array
        items:
            $ref: "#/components/schemas/Genre"
    Books:
        type: array
        items: 
            $ref: "#/components/schemas/Book"
    Genre:
        type: object
        required:
            - id
            - genreName
        properties:
            id:
                type: string
                description : unique id for the genre
            genreName:
                type: string
                description: name of the genre
    GenrePostBody:
        type: object
        required:
            - id
            - genreName
        properties:
            id:
                type: string
                description : unique id for the genre
            genreName:
                type: string
                description: name of the genre
    GenrePostResponse:
        type: object
        required:
            - message
        properties:
            message:
                type: string
                description: Response message from the server
    Book:
        type: object
        required:
            - id
            - name
            - genre
            - author
            - rating
            - downloadLink
            - thumbnail
        properties:
            id:
                type: string
                description : unique id for the book
            name:
                type: string
                description: name of the book
            genre:
                type: string
                description: genre of the book
            rating:
                type: number
                description: rating for the book in float float
            downloadLink:
                type: string
                description: url to download the book
            thumbnail:
                type: string
                description: thumbnail url
            author: 
                type: string
                description: name of the author
    BookPostBody:
        type: object
        required:
            - genreid
            - name
            - author
            - thumbnail
            - pdfFile
        properties:
            genreId:
                type: string
                description : unique id of the respective genre
            name:
                type: string
                description: name of the book
            author:
                type: string
                description: name of the author
            pdfFile:
                type: string
                description: google drive link to the pdf file
            thumbnail:
                type: string
                description: google drive link to the image
    BookPostResponse:
        type: object
        required:
            - message
        properties:
            message:
                type: string
                description: Response message from the server
    LoginPostBody:
        type: object
        required:
            - email
            - password
        properties:
            email: 
                type: string
                description: email of the user
            password:
                type: string
                description: password of the user
    LoginResponse:
        type: object
        required:
            - token
        properties: 
            token:
                 type: string
                 description: jwt auth token for the user
    SignupPostBody:
        type: object
        required:
            - firstname
            - lastname
            - email
            - password
        properties:
            firstname: 
                type: string
                description: firstname of the user
            lastname: 
                type: string
                description: lastname of the user
            email: 
                type: string
                description: email of the user
            password: 
                type: string
                description: password of the user
    SignupResponse:
        type: object
        required:
            - message
        properties: 
            message:
                 type: string
                 description: response message from the server

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string